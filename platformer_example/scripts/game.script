local manager = require("platformer_example.scripts.libs.manager")

function init(self)
    msg.post("@render:", "clear_color", {color = vmath.vector4(33 / 255.0, 31 / 255.0, 48 / 255.0, 0)})
    msg.post(".", "acquire_input_focus")
    
    manager.debug = false -- Turn this true/false for debug draws
    manager.init()
end


-- Just for Debug
function update(self, dt)
    if manager.debug then
        msg.post("@render:", "draw_debug_text", {text = profiler.get_cpu_usage()*100, position = vmath.vector3(33, 60, 0), color = vmath.vector4(1, 1, 1, 1)})
        msg.post("@render:", "draw_debug_text", {text = profiler.get_memory_usage(), position = vmath.vector3(33, 40, 0), color = vmath.vector4(1, 1, 1, 1)})
       
    end

    msg.post("@render:", "draw_debug_text", {text = "2 for debug draw on/off", position = vmath.vector3(33, 20, 0), color = vmath.vector4(1, 1, 1, 1)})
end

function on_input(self, action_id, action)
    
    if action_id == hash("toggle_debug") and action.pressed then
        manager.debug = manager.debug == false and true or false
        go.set("/fps#fps", "show", manager.debug)
    end

end